import polars as pl
from data_fetcher import get_dataframe

# Load the DataFrame
df = get_dataframe()

# Sort the DataFrame by index (assuming "index" is a column in the DataFrame)
df_sorted = df.sort("index")

#------------------------------------------- Case Methods -----------------------------------------#
# Find a case by index
def find_case(index: int) -> pl.DataFrame:
    """
    Returns a DataFrame containing the case with the specified index.
    """
    return df_sorted.filter(pl.col("index") == index)

# Get case summary
def get_case_summary(case: pl.DataFrame) -> str:
    flock_size = case["Flock Size"][0]  
    flock_type = case["Flock Type"][0]
    flock_details = f"{flock_size} {flock_type}" + ("s" if flock_size > 1 else "")
    return f"{case['County'][0]}, {case['State'][0]}: {flock_details} affected on {case['Start Date'][0]}"

# Get case location
def get_case_location(case: pl.DataFrame) -> str:
    return f"{case['County'][0]}, {case['State'][0]}"

# Get case date
def get_case_date(case: pl.DataFrame) -> str:
    return case["Start Date"][0]

# Get flock details
def get_flock_details(case: pl.DataFrame) -> tuple[str, int]:
    return case["Flock Type"][0], case["Flock Size"][0]

#------------------------------------------- Method Testing -----------------------------------------#
if __name__ == "__main__":
    
    # Replace index with case number
    index = 0 

    # Fetch the case as a DataFrame (single row) using the find_case method
    case = find_case(index)

    # Print results
    print(get_case_summary(case))
    print(get_case_location(case))
    print(get_case_date(case))
    print(get_flock_details(case))
