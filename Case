from __future__ import annotations
from dateclasses import dateclass
from datetime import date 

@dateclass
class Case:
    county: str
    state: str
    start_date: date
    flock_size: int
    flock_type: str
    
    def get_summary(self) -> str:
        flock_details = f"{self.flock_size} {self.flock_type}" + ("s" if flock_size > 1 else "")
        return f"{self.county}, {self.state}: {flock_details} affected on {self.start_date.strftime('%Y-%m-%d')}"
        
    def get_location(self) -> str:
        return f"{self.county}, {self.state}"
        
    def get_date(self) -> date:
        return self.start_date
        
    def get_flock_details(self) -> tuple[str, int]:
        return self.flock_type, self.flock_size
        
    def to_dict(self) -> dict:
        return{
            "county": self.county,
            "state": self.state,
            "start_date": self.start_date.strftime("%Y-%m-%d"),
            "flock_size": self.flock_size,
            "flock_type": self.flock_type
        }
